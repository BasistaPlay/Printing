# Generated by Django 4.2.7 on 2024-04-13 19:15

import colorfield.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Lietotājs',
                'verbose_name_plural': 'Lietotāji',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
            ],
            options={
                'verbose_name': 'Krāsa',
                'verbose_name_plural': 'Krāsas',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Adrese')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Pasta indekss')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Telefona numurs')),
                ('email', models.EmailField(max_length=254, verbose_name='E-pasts')),
                ('twitter_link', models.URLField(blank=True, null=True, verbose_name='Twitter saite')),
                ('facebook_link', models.URLField(blank=True, null=True, verbose_name='Facebook saite')),
                ('instagram_link', models.URLField(blank=True, null=True, verbose_name='Instagram saite')),
            ],
            options={
                'verbose_name': 'Kontakts',
                'verbose_name_plural': 'Kontakti',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Vārds')),
                ('last_name', models.CharField(max_length=100, verbose_name='Uzvārds')),
                ('email', models.EmailField(max_length=254, verbose_name='E-pasts')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Telefona numurs')),
                ('message', models.TextField()),
                ('replied', models.BooleanField(default=False, verbose_name='Atbildēts')),
                ('admin_subject', models.CharField(blank=True, max_length=255, null=True, verbose_name='Administrātora virsraksts')),
                ('admin_message', models.TextField(blank=True, null=True, verbose_name='Administrātora vēstule')),
            ],
            options={
                'verbose_name': 'Kontaktziņojums',
                'verbose_name_plural': 'Kontaktziņojumi',
            },
        ),
        migrations.CreateModel(
            name='CustomDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Virsraksts')),
                ('title_lv', models.CharField(max_length=100, null=True, verbose_name='Virsraksts')),
                ('title_en', models.CharField(max_length=100, null=True, verbose_name='Virsraksts')),
                ('description', models.TextField(verbose_name='Apraksts')),
                ('description_lv', models.TextField(null=True, verbose_name='Apraksts')),
                ('description_en', models.TextField(null=True, verbose_name='Apraksts')),
                ('additional_notes', models.TextField(verbose_name='Papildu piezīmes')),
                ('additional_notes_lv', models.TextField(null=True, verbose_name='Papildu piezīmes')),
                ('additional_notes_en', models.TextField(null=True, verbose_name='Papildu piezīmes')),
                ('image', models.ImageField(upload_to='page/', verbose_name='Bilde')),
            ],
            options={
                'verbose_name': 'Pielāgots dizains',
                'verbose_name_plural': 'Pielāgoti dizaini',
            },
        ),
        migrations.CreateModel(
            name='GiftCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_order_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('unlimited_usage', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Dāvanu kods',
                'verbose_name_plural': 'Dāvanu kodi',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_product', models.BooleanField(default=False)),
                ('allow_publish', models.BooleanField(default=False)),
                ('front_image', models.TextField(blank=True)),
                ('back_image', models.TextField(blank=True)),
                ('product_amount', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('average_rating', models.FloatField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('size', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Izmērs',
                'verbose_name_plural': 'Izmēri',
            },
        ),
        migrations.CreateModel(
            name='TextList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('font', models.CharField(blank=True, max_length=50)),
                ('text_size', models.CharField(blank=True, max_length=25)),
                ('text_color', models.CharField(blank=True, max_length=20)),
                ('order_text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.order')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vērtējums',
                'verbose_name_plural': 'Vērtējumi',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ievadiet produkta nosaukumu.', max_length=100, unique=True, verbose_name='Virsraksts')),
                ('title_lv', models.CharField(help_text='Ievadiet produkta nosaukumu.', max_length=100, null=True, unique=True, verbose_name='Virsraksts')),
                ('title_en', models.CharField(help_text='Ievadiet produkta nosaukumu.', max_length=100, null=True, unique=True, verbose_name='Virsraksts')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Bilde')),
                ('slug', models.SlugField(blank=True, help_text='Ievadiet URL draudzīgu nosaukumu.', unique=True, verbose_name='Slug')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('options', models.TextField(blank=True, help_text='Ievadiet opcijas kā sarakstu ar komatiem')),
                ('options_lv', models.TextField(blank=True, help_text='Ievadiet opcijas kā sarakstu ar komatiem', null=True)),
                ('options_en', models.TextField(blank=True, help_text='Ievadiet opcijas kā sarakstu ar komatiem', null=True)),
                ('front_image_with_background', models.ImageField(blank=True, upload_to='products/', verbose_name='Priekšējā bilde ar fonu')),
                ('front_image_not_background', models.ImageField(blank=True, upload_to='products/', verbose_name='Priekšējā bilde bez fona')),
                ('back_image_with_background', models.ImageField(blank=True, upload_to='products/', verbose_name='Aizmugurējā bilde ar fonu')),
                ('back_image_not_background', models.ImageField(blank=True, upload_to='products/', verbose_name='Aizmugurējā bilde bez fona')),
                ('available_colors', models.ManyToManyField(blank=True, related_name='products', to='home.color')),
                ('available_sizes', models.ManyToManyField(blank=True, related_name='products', to='home.size')),
            ],
            options={
                'verbose_name': 'Produkts',
                'verbose_name_plural': 'Produkti',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='product_color',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.color'),
        ),
        migrations.AddField(
            model_name='order',
            name='product_size',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.size'),
        ),
        migrations.CreateModel(
            name='ImageList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.TextField(blank=True)),
                ('order_images', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.order')),
            ],
        ),
    ]
